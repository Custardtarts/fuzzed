from django.db import models

from node import Node

class Edge(models.Model):
    """
    Class: Edge

    Models a generic edge for any diagram notation that connects two nodes with each other.

    Attributes:
    {long} client_id - the id of the edge as generated by the client
    {<Node>} source - starting point of the edge
    {<Node>} target - endpoint of the edge
    {bool} deleted - flag indicating whether the edge was deleted. Simplifies the restoration of the edge by toggling this switch.
    """
    class Meta:
        app_label = 'FuzzEd'

    client_id = models.BigIntegerField()
    source    = models.ForeignKey(Node, null=False, related_name='outgoing')
    target    = models.ForeignKey(Node, null=False, related_name='incoming')
    deleted   = models.BooleanField(default=False)

    def __unicode__(self):
        return  '%s -> %s' % (str(self.source), str(self.target))

    def to_json(self):
        """
        Method: to_json
        
        Serializes the values of the edge into a python dictionary that is JSON conform.

        Returns:
        {dict}
        """
        return {
            'id':     self.client_id, 
            'source': self.source.client_id, 
            'target': self.target.client_id
        }