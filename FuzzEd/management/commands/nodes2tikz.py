from django.core.management.base import BaseCommand
import svg2tikz, os

class Command(BaseCommand):
    args = '<SVG file>'
    help = 'Converts the node SVG files to their TIKZ counterparts'

    def handle(self, *args, **options):
        tikzTrees = {}
        for d in ['faulttree','fuzztree','rbd']:
            tikzTree = {}
            for root, dirs, files in os.walk('FuzzEd/static/img/'+d):
                print "Scanning "+root        
                for f in files:
                    if f.endswith(".svg"):
                        svg = open(root+os.sep+f).read()
                        tikzText = svg2tikz.convert_svg(svg)
                        start=tikzText.find("\\path")
                        end=tikzText.find("\\end{tikzpicture}")
                        tikzText = tikzText[start:end]
                        name=f[:f.rfind('.')]
                        tikzTree[name] = tikzText
            tikzTrees[d] = tikzTree
        destfile=open('FuzzEd/models/node_renderings.py','w')
        destfile.write('# Autogenerated by manage.py nodes2tikz, do not edit !\n')
        destfile.write("tikz="+str(tikzTrees))
        destfile.close()

