# This is the central runtime configuration file for all FuzzEd sub-projects
#
# - Uppercase configurations directly become Django settings.
# - Lowercase configurations settings are translated to subproject settings
#   by the settings build step. 
# - PROJECT_ROOT in the config value refers to the root directory on the host.
# - Settings starting with 'backend_' become part of backends/daemon.ini

# Settings for both development and production system
# that may be tweaked for specific installations

[all]
ADMINS                  = (('FuzzEd Admin', 'webmaster@fuzzed.org'),)
EMAIL_SUBJECT_PREFIX    = '[FuzzEd] '
SERVER_EMAIL            = 'webmaster@fuzzed.org'
TERMS_PAGE              = '/about/'
FEEDBACK_PAGE           = 'http://fuzzed.uservoice.com'
FOOTER                  = 'FuzzEd Development Team'
EMAIL_HOST              = 'localhost'
backend_daemon_port     = 8000
backend_log_file		= /tmp/fuzzed_backend.log
log_file                = /tmp/fuzzed.log

# Settings for both development and production system
# that are independent from particular installations

VERSION					= 0.67
MANAGERS                = ADMINS
SEND_BROKEN_LINK_EMAILS = False
AUTH_PROFILE_MODULE     = 'FuzzEd.UserProfile'
LANGUAGE_CODE           = 'en-en'
LOGIN_REDIRECT_URL      = '/dashboard/'
LOGIN_URL               = '/'
REQUIRE_BASE_URL        = 'script'
REQUIRE_BUILD_PROFILE   = '../lib/requirejs/require_build_profile.js'
REQUIRE_JS              = '../lib/requirejs/require-jquery.js'
ROOT_URLCONF            = 'FuzzEd.urls'
SECRET_KEY              = 'ki4t8(rtjqg*fqe=%3f@9*8a2xq8uub9616sstri1afl^@@4hw'
SITE_ID                 = 1
STATICFILES_DIRS        = ('FuzzEd/static',)   
STATICFILES_STORAGE     = 'require.storage.OptimizedStaticFilesStorage'
STATIC_ROOT             = 'FuzzEd/static-release/'   
STATIC_URL              = '/static/'
MEDIA_ROOT              = ''
MEDIA_URL               = ''
CORS_ORIGIN_ALLOW_ALL   = True
TIME_ZONE               = None                        
USE_I18N                = False                         
USE_L10N                = True                          
USE_TZ                  = False                           
WSGI_APPLICATION        = 'FuzzEd.wsgi.application'    
TEST_RUNNER             = 'django.test.runner.DiscoverRunner'
DJIKI_IMAGES_PATH       = 'wiki_img'
DJIKI_PARSER            = 'FuzzEd.wiki'
DJIKI_AUTHORIZATION_BACKEND = 'FuzzEd.wiki.FuzzEdWikiAccess'
add_auth_backends       = 'oauth2_provider.backends.OAuth2Backend', 'openid2rp.django.auth.Backend'
add_installed_apps      = 'openid2rp.django','require','oauth2_provider','corsheaders','tastypie', 'djiki', 'FuzzEd'
add_middleware          = 'FuzzEd.middleware.HttpErrorMiddleware', 'corsheaders.middleware.CorsMiddleware', 'oauth2_provider.middleware.OAuth2TokenMiddleware',
add_static_finders      = 
add_context_processors  = 'FuzzEd.contextprocessors.footer', 'FuzzEd.contextprocessors.site_specifics'

# Settings for development systems
[development]
db_user                 = fuzztrees.sqlite
db_password             = fuzztrees
db_name                 = fuzztrees.sqlite
db_test_name            = test_fuzztrees
db_type                 = sqlite3
db_host			        = localhost
DEBUG                   = True
EMAIL_BACKEND           = 'django.core.mail.backends.console.EmailBackend'
SERVER                  = 'http://localhost:8000'
OPENID_RETURN           = 'http://localhost:8000/login/?openidreturn'
TEMPLATE_DEBUG          = True
TEMPLATE_DIRS           = ('FuzzEd/templates', 'FuzzEd/static/img', 'FuzzEd/templates/djiki', 'djiki')
logger_requests         = console
logger_fuzzed           = console
backend_daemon_host     = localhost

# Settings for vagrant development systems
[vagrant]
db_user                 = fuzztrees.sqlite
db_password             = fuzztrees
db_name                 = fuzztrees.sqlite
db_test_name            = test_fuzztrees
db_type                 = sqlite3
db_host			        = localhost
DEBUG                   = True
EMAIL_BACKEND           = 'django.core.mail.backends.console.EmailBackend'
SERVER                  = 'http://192.168.33.10:8000'
OPENID_RETURN           = 'http://192.168.33.10:8000/login/?openidreturn'
TEMPLATE_DEBUG          = True
TEMPLATE_DIRS           = ('FuzzEd/templates', 'FuzzEd/static/img', 'FuzzEd/templates/djiki', 'djiki')
logger_requests         = console
logger_fuzzed           = console
backend_daemon_host     = localhost

# Settings for production systems
[production]
db_user                 = fuzztrees
db_password             = fuzztrees
db_name                 = fuzztrees
db_test_name            = test_fuzztrees
db_type                 = postgresql_psycopg2
db_host			        = localhost
ALLOWED_HOSTS           = ['fuzzed.org', 'www.fuzzed.org'] 
DEBUG                   = False
EMAIL_BACKEND           = 'django.core.mail.backends.smtp.EmailBackend'
SERVER                  = 'https://fuzzed.org' # no www. so that POSTs are not redirected 
OPENID_RETURN           = 'https://fuzzed.org/login/?openidreturn' # keep www, otherwise old users get a new account
TEMPLATE_DEBUG          = False
TEMPLATE_DIRS           = (PROJECT_ROOT+'/templates',PROJECT_ROOT+'/static-release/img',PROJECT_ROOT+'/templates/djiki')

logger_requests         = mail_admins
logger_fuzzed           = file
backend_daemon_host     = backend.fuzzed.org
deployment_web_host     = www.fuzzed.org

# Settings for different backend services run by backends/daemon.py
# Paths should be relative to ./backends/

[backend_eps_rendering]
executable				= python ./rendering/render.py --eps
output		            = graph.eps
job_kind				= eps
log_file				= backend_eps.log

[backend_pdf_rendering]
executable				= python ./rendering/render.py --pdf
output		            = graph.pdf
job_kind				= pdf
log_file				= backend_pdf.log

[backend_topevent]
executable				= lib/ftanalysis_exe
output		            = result.xml
job_kind				= topevent
log_file				= backend_topevent.log

[backend_configuration]
executable				= lib/ftconfiguration_exe
output		            = result.xml
job_kind				= cutsets
log_file				= backend_configuration.log

[backend_simulation]
executable				= lib/ftsimulation
output		            = result.xml
job_kind				= simulation
log_file				= backend_simulation.log

[backend_mincuts]
executable				= lib/ftmincuts
output		            = result.xml
job_kind				= mincut
log_file				= backend_simulation.log




